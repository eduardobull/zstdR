// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// impl_zstdCompress
RawVector impl_zstdCompress(RObject object, int level);
RcppExport SEXP _zstdR_impl_zstdCompress(SEXP objectSEXP, SEXP levelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type object(objectSEXP);
    Rcpp::traits::input_parameter< int >::type level(levelSEXP);
    rcpp_result_gen = Rcpp::wrap(impl_zstdCompress(object, level));
    return rcpp_result_gen;
END_RCPP
}
// impl_zstdUncompress
RawVector impl_zstdUncompress(RObject raw);
RcppExport SEXP _zstdR_impl_zstdUncompress(SEXP rawSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type raw(rawSEXP);
    rcpp_result_gen = Rcpp::wrap(impl_zstdUncompress(raw));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_zstdR_impl_zstdCompress", (DL_FUNC) &_zstdR_impl_zstdCompress, 2},
    {"_zstdR_impl_zstdUncompress", (DL_FUNC) &_zstdR_impl_zstdUncompress, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_zstdR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
